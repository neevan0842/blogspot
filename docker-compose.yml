version: "3.0"
services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8000" # Internal port to expose the backend service to other containers
    ports:
      - "8000:8000" # External port to expose the backend service to the host machine
    networks:
      - app_network
    restart: always # Restart policy for production stability
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django
    networks:
      - app_network

    # you have to make migrations manually to work
    # docker-compose exec backend python manage.py makemigrations
    # docker-compose exec backend python manage.py migrate

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: "http://localhost:8000/"
        # VITE_API_URL: "https://blogspotapi.mine.bz/"
    volumes:
      - dist:/app/dist # Persist the frontend build
    networks:
      - app_network

  caddy:
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - dist:/srv
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    depends_on:
      - backend
      - frontend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: # Named volume for the SQLite database
  dist: # Named volume for the frontend build
  caddy_data:
  caddy_config:
